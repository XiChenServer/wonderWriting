// Code generated by goctl. DO NOT EDIT.
// Source: group.proto

package server

import (
	"context"

	"calligraphy/apps/group/rpc/internal/logic"
	"calligraphy/apps/group/rpc/internal/svc"
	"calligraphy/apps/group/rpc/types/group"
)

type GroupServer struct {
	svcCtx *svc.ServiceContext
	group.UnimplementedGroupServer
}

func NewGroupServer(svcCtx *svc.ServiceContext) *GroupServer {
	return &GroupServer{
		svcCtx: svcCtx,
	}
}

// 开启签到
func (s *GroupServer) StartCheck(ctx context.Context, in *group.StartCheckRequest) (*group.StartCheckResponse, error) {
	l := logic.NewStartCheckLogic(ctx, s.svcCtx)
	return l.StartCheck(in)
}

// 上传书法记录
func (s *GroupServer) CreateRecord(ctx context.Context, in *group.CreateRecordRequest) (*group.CreateRecordResponse, error) {
	l := logic.NewCreateRecordLogic(ctx, s.svcCtx)
	return l.CreateRecord(in)
}

// 查看某人的书法记录
func (s *GroupServer) LookRecordByUserId(ctx context.Context, in *group.LookRecordByUserIdRequest) (*group.LookRecordByUserIdResponse, error) {
	l := logic.NewLookRecordByUserIdLogic(ctx, s.svcCtx)
	return l.LookRecordByUserId(in)
}

// 检查打卡模式是否开启
func (s *GroupServer) CheckPunchCardModel(ctx context.Context, in *group.CheckPunchCardModelRequest) (*group.CheckPunchCardModelResponse, error) {
	l := logic.NewCheckPunchCardModelLogic(ctx, s.svcCtx)
	return l.CheckPunchCardModel(in)
}
