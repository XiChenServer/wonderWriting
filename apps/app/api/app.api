import (
	"apis/community.api"
	"apis/user.api"
	"apis/home.api"
	"apis/group.api"
	"apis/activity.api"
)

//========================================> User <============================
//no need login

@server (
	prefix: /user
	group: user
)
service App{
	// 获取邮箱验证码
	@handler GetEmailVerification
	post /basic/getemailverification(VerificationRequest) returns(VerificationResponse)
	//用户注册
	@handler UserRegister
	post /register(UserRegisterRequest) returns (UserRegisterResponse)
	//用户登录
	@handler UserLogin
	post /login(UserLoginRequest) returns (UserLoginResponse)
	//用户忘记密码
	@handler UserForgetPwd
	post /forgetpwd(UserForgetPwdRequest) returns (UserForgetPwdResponse)
}

// need login
@server(
	prefix: /user
	group: user
	jwt: Auth
)
service App{
	//获取用户信息
	@handler UserInfo
	post /userinfo() returns (UserInfoResponse)
	// 修改用户密码
	@handler UserModPwd
	post /modpwd(UserModPwdRequset) returns (UserModPwdResponse)
	//用户修改头像
	@handler UserModAvatar
	post /modavatar() returns (UserModAvatarResponse)
	//用户修改背景
	@handler UserModBackground
	post /modbackground() returns (UserModBackgroundResponse)
	//用户修改信息
	@handler UserModInfo
	post /modinfo(UserModInfoRequest) returns(UserModInfoResponse)
	//用户关注
	@handler UserFollow
	post /follow(UserFollowRequest) returns (UserFollowResponse)
	//用户取消关注
	@handler UserCancelFollow
	post /cancel_follow(UserCancelFollowRequest) returns(UserCancelFollowResponse)
	//用户查看自己的关注
	@handler LoolAllFollow
	post /look/all_follow(LookAllFollowRequest) returns (LookAllFollowResponse)
	//用户查看自己的粉丝
	@handler LookAllFans
	post /look/all_fans(LookAllFansRequest) returns (LookAllFansResponse)
}

//=====================================> communoty <=======================================
//no need login

@server (
	prefix: /community
	group: community
)
service App{
	//用户查看所有的帖子
	@doc "user look all post"
	@handler LookAllPosts
	post /look/allposts(LookAllPostsRequest) returns (LookAllPostsResponse)
	//查看评论
	@doc "查看评论请求"
	@handler LookComment
	post /look/comment(LookCommentRequest) returns (LookCommentResponse)
}

//need login
@server (
	prefix: /community
	group: community
	jwt: Auth
)
service App{
	//用户创建帖子
	@doc "user create post"
	@handler UsercretePost
	post /create/post() returns (PostCreateResponse)

	//用户删除帖子
	@doc "user del post"
	@handler UserDelPost
	post /delete/post(PostDelRequest) returns (PostDelResponse)

	//用户查看mourrn的帖子
	@doc "user see post userId"
	@handler UserLookPostByOwn
	post /look/postbyown(LookPostByOwnRequest) returns (LookPostByOwnResponses)

	// 点赞请求
	@doc "点赞请求"
	@handler LikePost
	post /like/post(LikePostRequest) returns (LikePostResponse)

	// 取消点赞请求
	@doc "取消点赞请求"
	@handler CancelLikePost
	post /cancel/like(CancelLikePostRequest) returns (CancelLikePostResponse)

	// 评论请求
	@doc "评论请求"
	@handler CommentPost
	post /comment/post(CommentPostRequest) returns (CommentPostResponse)

	// 取消评论请求
	@doc "取消评论请求"
	@handler CancelCommentPost
	post /cancel/comment(CancelCommentPostRequest) returns (CancelCommentPostResponse)

	// 收藏请求
	@doc "收藏请求"
	@handler CollectPost
	post /collect/post(CollectPostRequest) returns (CollectPostResponse)

	// 取消收藏请求
	@doc "取消收藏请求"
	@handler CancelCollectPost
	post /cancel/collect(CancelCollectPostRequest) returns (CancelCollectPostResponse)
}

//=====================================> home <=======================================
//no need login

@server (
	prefix: /home
	group: home
)
service App{
	// 用户人气榜单
	@doc "用户人气榜单"
	@handler UserPopularityRankings
	post /user/popularity/rankings(UserPopularityRankingsRequest) returns (UserPopularityRankingsResponse)

	// 帖子每日榜单
	@doc "帖子每日榜单"
	@handler PostPopularityRankings
	post /post/popularity/rankings(PostPopularityRankingsRequest) returns (PostPopularityRankingsResponse)
}

//=====================================> group <=======================================
//need login

@server (
	prefix: /group
	group: group
	jwt: Auth
)
service App{
	// 开启打卡
	@doc "开启打卡"
	@handler StartCheck
	post /start/check(StartCheckRequest) returns (StartCheckResponse)

	//上传书法信息
	@doc "上传书法"
	@handler CreateRecord
	post /create/record() returns (CreateRecordResponse)

	//查看某人的书法信息
	@doc "查看某人的书法信息"
	@handler LookRecordByUser
	post /look/recordbyuser(LookRecordByUserIdRequest) returns (LookRecordByUserIdResponse)

	//查看某人的签到是否打开
	@doc "查看某人的签到是否打开"
	@handler CheckPunchCard
	post /check/pubcgcard(CheckPunchCardModelRequest) returns (CheckPunchCardModelResponse)
}

//=====================================> activity <=======================================
// no need login
@server (
	prefix: /activity
	group: activity
)
service App{
	//查看所有活动请求消息
	@doc "查看所有活动请求消息"
	@handler LookAllActivities
	post /lool/all_activities(LookAllActivitiesRequest) returns(LookAllActivitiesResponse)
}

//need login
@server (
	prefix: /activity
	group: activity
	jwt: Auth
	middleware: GreetMiddleware1, GreetMiddleware2
)
service App{
	// 每日抢积分
	@doc "每日抢积分"
	@handler  GrabPoints
	post /grab/points(GrabPointsRequest) returns (GrabPointsResponse)

	// 用户报名活动
	@doc "用户报名活动"
	@handler  UserSignUpActivity
	post /sign_up/activity(UserSignUpActivityRequest) returns (UserSignUpActivityResponse)

	// 用户查看自己的所有活动
	@doc "用户查看自己的所有活动"
	@handler  UserViewAllActivities
	post /view/all_activities_by_one(UserViewAllActivitiesRequest) returns (UserViewAllActivitiesResponse)
}

//goctl api go -api ./app.api -dir .
//生成json，可以直接导入apifox
//goctl api plugin -plugin goctl-swagger="swagger -filename app.json" -api app.api -dir .