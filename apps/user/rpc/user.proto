syntax = "proto3";
package user;

option go_package = "./user";

// 用户登录
message UserLoginRequest {
  string Email = 1;
  string Password = 2;
}
message UserLoginResponse{
  int64 Id = 1;
}

// 用户注册
message UserRegisterRequest {
  string NickName = 1;
  string EmailCode = 2;
  string Email = 3;
  string Password = 4;
}

message UserRegisterResponse {
  int64 Code = 1;
  string Message = 2;
}


// 用户信息
message UserInfoRequest {
  int64 Id = 1;
}
message UserInfoResponse {
  int64 Id = 1;
  string NickName = 2;
  string Account = 3;
  string Email = 4;
  string BackgroundImage = 5;
  string AvatarBackground = 6;
  string Phone = 7;
  int64 PostCount = 8;
  int64 FollowCount = 9;
  int64 FansCount = 10;
  int64 LikeCount = 11;
  int64 PointCount = 12;
}


//用户忘记密码
message UserForgetPwdRequest{
  string Email = 1;
}
message UserForgetPwdResponse{
  int64 Id = 1;
}

//用户修改密码
message UserModPwdRequest{
  int64 Id = 1;
  string Password = 2;
}
message UserModPwdResponse{

}

//用户修改头像
message UserModAvatarRequest{
  int64 Id = 1;
  string Url = 2;
}
message UserModAvatarResponse{

}
//用户修改背景
message UserModBackgroundRequest{
  int64 Id = 1;
  string Url = 2;
}
message UserModBackgroundResponse{

}

message UserModInfoRequest {
  string NickName = 1;
  string Phone = 2;
  int64 Id = 3;
}


message UserModInfoResponse {

}
// 用户关注
message UserFollowRequest{
  uint32 user_id = 1;
  uint32 other_id = 2;
}
message UserFollowResponse{

}
//用户取消关注
message UserCancelFollowRequest{
  uint32 user_id = 1;
  uint32 other_id = 2;
}
message UserCancelFollowResponse{
}

// 用户的信息
message UserInfo {
  uint32 user_id = 1;
  string avatar_background = 2;
  string nick_name = 3;
  int64 follow_count = 4;
  int64 fans_count = 5;
  string email = 6;
}

//查看所有的关注
message LookAllFollowRequest{
  uint32 user_id = 1;
  // 当前页码
  uint32 page = 2;
  // 每页大小
  uint32 page_size = 3;
}
message LookAllFollowResponse{
  repeated UserInfo user_info = 1;
  // 当前页码
  uint32 current_page = 2;
  // 每页大小
  uint32 page_size = 3;
  // 偏移量
  uint32 offset = 4;
  // 是否溢出
  bool overflow = 5;
  // 总页数
  uint32 total_pages = 6;
  // 总记录数
  uint64 total_count = 7;
}

//查看所有的粉丝
//查看所有的关注
message LookAllFansRequest{
  uint32 user_id = 1;
  // 当前页码
  uint32 page = 2;
  // 每页大小
  uint32 page_size = 3;
}
message LookAllFansResponse{
 repeated UserInfo user_info = 1;
  // 当前页码
  uint32 current_page = 2;
  // 每页大小
  uint32 page_size = 3;
  // 偏移量
  uint32 offset = 4;
  // 是否溢出
  bool overflow = 5;
  // 总页数
  uint32 total_pages = 6;
  // 总记录数
  uint64 total_count = 7;
}

message WhetherFollowUserRequest{
  uint32 user_id = 1;
  uint32 other_id = 2;
}
message WhetherFollowUserResponse{
}


service User{
  rpc Login(UserLoginRequest) returns (UserLoginResponse);
  rpc Register(UserRegisterRequest) returns (UserRegisterResponse);
  rpc UserInfo(UserInfoRequest) returns (UserInfoResponse);
  rpc UserForgetPwd(UserForgetPwdRequest) returns (UserForgetPwdResponse);
  rpc UserModPwd(UserModPwdRequest) returns (UserModPwdResponse);
  rpc UserModAvatar(UserModAvatarRequest) returns (UserModAvatarResponse);
  rpc UserModBackground(UserModBackgroundRequest) returns (UserModBackgroundResponse);
  rpc UserModInfo(UserModInfoRequest) returns (UserModInfoResponse);

  //用户关注
  rpc UserFollow(UserFollowRequest) returns (UserFollowResponse);
  //用户取消关注
  rpc UserCancelFollow(UserCancelFollowRequest) returns (UserCancelFollowResponse);
  //用户查看自己的粉丝
  rpc LookAllFans(LookAllFansRequest) returns (LookAllFansResponse);
  //用户查看自己的关注
  rpc LookAllFollow(LookAllFollowRequest) returns (LookAllFollowResponse);
  //用户是否关注其他人
  rpc  WhetherFollowUser(WhetherFollowUserRequest) returns (WhetherFollowUserResponse);
}



//  goctl rpc protoc ./rpc/user.proto --go_out=./rpc/types --go-grpc_out=./rpc/types --zrpc_out=./rpc

