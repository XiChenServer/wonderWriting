// Code generated by goctl. DO NOT EDIT.
// Source: community.proto

package communityclient

import (
	"context"

	"calligraphy/apps/community/rpc/types/community"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CommunityCreatePostRequest      = community.CommunityCreatePostRequest
	CommunityCreatePostResponse     = community.CommunityCreatePostResponse
	CommunityDelPostRequest         = community.CommunityDelPostRequest
	CommunityDelPostResponse        = community.CommunityDelPostResponse
	CommunityLookAllPostsRequest    = community.CommunityLookAllPostsRequest
	CommunityLookAllPostsResponse   = community.CommunityLookAllPostsResponse
	CommunityLookPostByOwnRequest   = community.CommunityLookPostByOwnRequest
	CommunityLookPostByOwnResponses = community.CommunityLookPostByOwnResponses
	PostInfo                        = community.PostInfo

	Community interface {
		CommunityCreatePost(ctx context.Context, in *CommunityCreatePostRequest, opts ...grpc.CallOption) (*CommunityCreatePostResponse, error)
		CommunityDelPost(ctx context.Context, in *CommunityDelPostRequest, opts ...grpc.CallOption) (*CommunityDelPostResponse, error)
		CommunityLookPostByOwn(ctx context.Context, in *CommunityLookPostByOwnRequest, opts ...grpc.CallOption) (*CommunityLookPostByOwnResponses, error)
		CommunityLookAllPosts(ctx context.Context, in *CommunityLookAllPostsRequest, opts ...grpc.CallOption) (*CommunityLookAllPostsResponse, error)
	}

	defaultCommunity struct {
		cli zrpc.Client
	}
)

func NewCommunity(cli zrpc.Client) Community {
	return &defaultCommunity{
		cli: cli,
	}
}

func (m *defaultCommunity) CommunityCreatePost(ctx context.Context, in *CommunityCreatePostRequest, opts ...grpc.CallOption) (*CommunityCreatePostResponse, error) {
	client := community.NewCommunityClient(m.cli.Conn())
	return client.CommunityCreatePost(ctx, in, opts...)
}

func (m *defaultCommunity) CommunityDelPost(ctx context.Context, in *CommunityDelPostRequest, opts ...grpc.CallOption) (*CommunityDelPostResponse, error) {
	client := community.NewCommunityClient(m.cli.Conn())
	return client.CommunityDelPost(ctx, in, opts...)
}

func (m *defaultCommunity) CommunityLookPostByOwn(ctx context.Context, in *CommunityLookPostByOwnRequest, opts ...grpc.CallOption) (*CommunityLookPostByOwnResponses, error) {
	client := community.NewCommunityClient(m.cli.Conn())
	return client.CommunityLookPostByOwn(ctx, in, opts...)
}

func (m *defaultCommunity) CommunityLookAllPosts(ctx context.Context, in *CommunityLookAllPostsRequest, opts ...grpc.CallOption) (*CommunityLookAllPostsResponse, error) {
	client := community.NewCommunityClient(m.cli.Conn())
	return client.CommunityLookAllPosts(ctx, in, opts...)
}
