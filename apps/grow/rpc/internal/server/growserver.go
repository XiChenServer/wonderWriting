// Code generated by goctl. DO NOT EDIT.
// Source: grow.proto

package server

import (
	"context"

	"calligraphy/apps/grow/rpc/internal/logic"
	"calligraphy/apps/grow/rpc/internal/svc"
	"calligraphy/apps/grow/rpc/types/grow"
)

type GrowServer struct {
	svcCtx *svc.ServiceContext
	grow.UnimplementedGrowServer
}

func NewGrowServer(svcCtx *svc.ServiceContext) *GrowServer {
	return &GrowServer{
		svcCtx: svcCtx,
	}
}

// 开启签到
func (s *GrowServer) StartCheck(ctx context.Context, in *grow.StartCheckRequest) (*grow.StartCheckResponse, error) {
	l := logic.NewStartCheckLogic(ctx, s.svcCtx)
	return l.StartCheck(in)
}

// 上传书法记录
func (s *GrowServer) CreateRecord(ctx context.Context, in *grow.CreateRecordRequest) (*grow.CreateRecordResponse, error) {
	l := logic.NewCreateRecordLogic(ctx, s.svcCtx)
	return l.CreateRecord(in)
}

// 查看某人的书法记录
func (s *GrowServer) LookRecordByUserId(ctx context.Context, in *grow.LookRecordByUserIdRequest) (*grow.LookRecordByUserIdResponse, error) {
	l := logic.NewLookRecordByUserIdLogic(ctx, s.svcCtx)
	return l.LookRecordByUserId(in)
}

// 检查打卡模式是否开启
func (s *GrowServer) CheckPunchCardModel(ctx context.Context, in *grow.CheckPunchCardModelRequest) (*grow.CheckPunchCardModelResponse, error) {
	l := logic.NewCheckPunchCardModelLogic(ctx, s.svcCtx)
	return l.CheckPunchCardModel(in)
}

// 进行打卡
func (s *GrowServer) CheckIn(ctx context.Context, in *grow.CheckInRequest) (*grow.CheckInResponse, error) {
	l := logic.NewCheckInLogic(ctx, s.svcCtx)
	return l.CheckIn(in)
}
